<!DOCTYPE html>
<html>
<head>
    <title>plot</title>
    <script src="https://cdn.bootcdn.net/ajax/libs/plotly.js/2.3.1/plotly-basic.min.js"></script>
</head>
<body>
<div id="myDiv" style="height: 500px;width: 1200px"></div>

<script>
    var x = {{.Samples.X}};
    var y = {{.Samples.Y}};
    var marker = {
        name: 'samples',
        x: x,
        y: y,
        mode: 'markers',
        marker: {color: 'yellow'}
    }
    lineMaxX = 1.5
    var fitting_line = {
        name: 'fitting-line',
        type: "scatter",
        mode: "lines",
        x: [0, lineMaxX],
        y: [0, 0],
        line: {color: 'red'}
    };

    var lost = {
        name: 'lost',
        type: "scatter",
        mode: "lines",
        x: [1.5, 1.5],
        y: [0, 0.5],
        line: {color: 'blue'}
    };

    var data = [fitting_line, lost, marker];

    Plotly.newPlot('myDiv', data, {
        xaxis: {range: [0, 3.0]},
        yaxis: {range: [0, 0.9]}
    });

    function animation() {
        Plotly.animate('myDiv', {
            data: [fitting_line, lost],
            traces: [0, 1],
            layout: {}
        }, {
            transition: {
                duration: 500,
                easing: 'cubic-in-out'
            },
            frame: {
                duration: 500
            }
        })
    }

    const interval = 1000

    var offset = 0.1
    count = 0;
    const records = {{.Records}};
    console.log('records length',records.length);
    const repeat = function () {
        console.log('count =', count);
        if (count < records.length) {
            // trace.y = [0, trace.y[1]+ offset]
            const base = records[count]["Base"]
            fitting_line.y = [base, records[count]["Slope"] * lineMaxX + base]
            lost.y = [0, records[count]["Lost"]]
            count++
            animation()
            setTimeout(repeat, interval)
        }
    }

    setTimeout(repeat, 0)
</script>
</body>
</html>